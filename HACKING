Hacking moxiedev tools
=======================

The moxiedev tree contains development sources for the GNU software
development tools suitable for targeting the moxie architecture.

Directories
------------

  gcc

  This contains an anonymous svn checkout of the gcc tree from
  gcc.gnu.org.  Moxie patches are applied to this and maintained in
  our mercurial repository.  However, since the repo contains .svn
  directories, we can still update the tree directly from the upstream
  gcc trunk with svn.

  src

  This contains an anonymous cvs checkout of the src tree (binutils,
  gas, ld, sim, gdb, newlib and libgloss) from sourceware.org.
  Moxie patches are applied to this and maintained in our mercurial
  repository.  However, since the repo contains CVS directories, we
  can still update the tree directly from the upstream src trunk with
  cvs.

  qemu

  This contains an anonymous git checkout of the trunk of the qemu tree.
  Moxie patches are applied to this and maintined in our git
  repository.  However, since the repo contains the .git directory, we
  can still update the tree directly from the upstream qemu trunk with
  git.

  u-boot

  This contains an anonymous git checkout of the trunk of the u-boot tree.
  Moxie patches are applied to this and maintined in our git
  repository.  However, since the repo contains the .git directory, we
  can still update the tree directly from the upstream u-boot trunk with
  git.

  doc

  This directory contains documentation for the moxie core.

  build

  This directory is created at build time.  We place the gcc and src
  build directories here.

  root

  This is the install directory for when we build and install for
  local testing.


Building
---------

The top level directory contains two key files: moxiedev-setenv and
build.xml.  You should configure and source moxiedev-setenv in order
to set various environment variables required by the build system.
This includes setting JAVA_HOME (required by ec2 scripts (to be
committed)).

Once you've set up your environment, use the ant build script to
configure, build and install the tools like so:

$ ant build

The script contains several other options, which you can list by
simply running "ant" with no options.

